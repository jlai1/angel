# Template.layout.events 'click #visualize_button': (event) ->
Template.visualization4.helpers visualization: ->
  svgContainer = d3.select('body').append('svg').attr('width', 1000).attr('height', 1000)
  # svgContainer = d3.select('svg').attr('width', 1000).attr('height', 1000)

  ###scattered charts
  # Simple test data generator
  ###

  randomData = (groups, points) ->
    ## groups,# points per group
    data = []
    shapes = [
      'circle'
      'cross'
      'triangle-up'
      'triangle-down'
      'diamond'
      'square'
    ]
    random = d3.random.normal()
    i = 0
    while i < groups
      data.push
        key: 'Group ' + i
        values: []
      j = 0
      while j < points
        data[i].values.push
          x: random()
          y: random()
          size: Math.random()
          shape: if Math.random() > 0.95 then shapes[j % 6] else 'circle'
        j++
      i++
    data

  nv.addGraph ->
    chart = nv.models.scatterChart().showDistX(true).showDistY(true).color(d3.scale.category10().range())
    #Configure how the tooltip looks.
    chart.tooltipContent (key) ->
      '<h3>' + key + '</h3>'
    #Axis settings
    chart.xAxis.tickFormat d3.format('.02f')
    chart.yAxis.tickFormat d3.format('.02f')
    #We want to show shapes other than circles.
    # chart.scatter.onlyCircles false
    myData = randomData(2, 5)
    d3.select('svg').datum(myData).call chart
    nv.utils.windowResize chart.update
    chart

  # ---
  # generated by js2coffee 2.2.0


  return "Scattered Chart"